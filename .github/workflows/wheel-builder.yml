name: Wheel Builder
on:
  workflow_dispatch:
    inputs:
      version:
        required: true

jobs:
  manylinux:
    runs-on: ubuntu-latest
    container: ${{ matrix.MANYLINUX.CONTAINER }}
    strategy:
      matrix:
        PYTHON: ["cp27-cp27m", "cp27-cp27mu", "cp36-cp36m"]
        MANYLINUX:
          - NAME: manylinux1_x86_64
            CONTAINER: "pyca/cryptography-manylinux1:x86_64"
          - NAME: manylinux2010_x86_64
            CONTAINER: "pyca/cryptography-manylinux2010:x86_64"
    name: "${{ matrix.PYTHON }} for ${{ matrix.MANYLINUX.NAME }}"
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "LDFLAGS=-L/opt/pyca/cryptography/openssl/lib" >> $GITHUB_ENV
          echo "CFLAGS=-I/opt/pyca/cryptography/openssl/include -Wl,--exclude-libs,ALL" >> $GITHUB_ENV

      - uses: ./.github/actions/build-wheel
        with:
          python: /opt/python/${{ matrix.PYTHON }}/bin/python
          version: ${{ github.event.inputs.version }}
          python-version: ${{ matrix.PYTHON }}

      - run: auditwheel repair --plat ${{ matrix.MANYLINUX.NAME }} wheelhouse/cryptograph*.whl -w manylinux-wheelhouse/
      - run: unzip manylinux-wheelhouse/*.whl -d execstack.check
      - run: |
          results=$(execstack execstack.check/cryptography/hazmat/bindings/*.so)
          count=$(echo "$results" | grep -c '^X' || true)
          if [ "$count" -ne 0 ]; then
            exit 1
          else
            exit 0
          fi
      - run: mkdir cryptography-wheelhouse
      - run: mv manylinux-wheelhouse/cryptography*.whl cryptography-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "cryptography-${{ github.event.inputs.version }}-${{ matrix.MANYLINUX.NAME }}-${{ matrix.PYTHON }}"
          path: cryptography-wheelhouse/

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        PYTHON:
          - VERSION: '2.7'
            ABI_VERSION: 'cp27'
            DOWNLOAD_URL: 'https://www.python.org/ftp/python/2.7.17/python-2.7.17-macosx10.9.pkg'
            BIN_PATH: '/Library/Frameworks/Python.framework/Versions/2.7/bin/python'
          - VERSION: '3.8'
            ABI_VERSION: 'cp36'
            DOWNLOAD_URL: 'https://www.python.org/ftp/python/3.8.2/python-3.8.2-macosx10.9.pkg'
            BIN_PATH: '/Library/Frameworks/Python.framework/Versions/3.8/bin/python3'
    name: "${{ matrix.PYTHON.VERSION }} ABI ${{ matrix.PYTHON.ABI_VERSION }} macOS"
    steps:
      - uses: actions/checkout@v2
      - run: |
          curl "$PYTHON_DOWNLOAD_URL" -o python.pkg
          sudo installer -pkg python.pkg -target /
        env:
          PYTHON_DOWNLOAD_URL: ${{ matrix.PYTHON.DOWNLOAD_URL }}
      - run: ${{ matrix.PYTHON.BIN_PATH }} -m pip install -U virtualenv requests
      - name: Download OpenSSL
        run: |
            ${{ matrix.PYTHON.BIN_PATH }} .github/workflows/download_openssl.py macos openssl-macos-x86-64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
            echo "CRYPTOGRAPHY_SUPPRESS_LINK_FLAGS=1" >> $GITHUB_ENV
            echo "LDFLAGS=${HOME}/openssl-macos-x86-64/lib/libcrypto.a ${HOME}/openssl-macos-x86-64/lib/libssl.a" >> $GITHUB_ENV
            echo "CFLAGS=-I${HOME}/openssl-macos-x86-64/include -mmacosx-version-min=10.10 -march=core2" >> $GITHUB_ENV

      - uses: ./.github/actions/build-wheel
        with:
          python: ${{ matrix.PYTHON.BIN_PATH }}
          version: ${{ github.event.inputs.version }}
          python-version: ${{ matrix.PYTHON.ABI_VERSION }}

      - run: mkdir cryptography-wheelhouse
      - run: mv wheelhouse/cryptography*.whl cryptography-wheelhouse/
      - uses: actions/upload-artifact@v2.2.0
        with:
          name: "cryptography-${{ github.event.inputs.version }}-macOS-${{ matrix.PYTHON.ABI_VERSION }}"
          path: cryptography-wheelhouse/

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        WINDOWS:
          - {ARCH: 'x86', WINDOWS: 'win32'}
          - {ARCH: 'x64', WINDOWS: 'win64'}
        PYTHON:
          - {VERSION: "2.7", MSVC_VERSION: "2010", ABI_VERSION: "cp27"}
          - {VERSION: "3.8", MSVC_VERSION: "2019", ABI_VERSION: "cp36"}
    name: "${{ matrix.PYTHON.VERSION }} ${{ matrix.WINDOWS.WINDOWS }} ${{ matrix.PYTHON.ABI_VERSION }}"
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON.VERSION }}
          architecture: ${{ matrix.WINDOWS.ARCH }}
      - name: Install MSVC for Python 2.7
        run: |
            Invoke-WebRequest -Uri https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi -OutFile VCForPython27.msi
            Start-Process msiexec -Wait -ArgumentList @('/i', 'VCForPython27.msi', '/qn', 'ALLUSERS=1')
            Remove-Item VCForPython27.msi -Force
        shell: powershell
        if: matrix.PYTHON.VERSION == '2.7'
      - run: pip install requests
      - name: Download OpenSSL
        run: |
            python .github/workflows/download_openssl.py windows openssl-${{ matrix.WINDOWS.WINDOWS }}-${{ matrix.PYTHON.MSVC_VERSION }}
            echo "INCLUDE=C:/openssl-${{ matrix.WINDOWS.WINDOWS }}-${{ matrix.PYTHON.MSVC_VERSION }}/include;$INCLUDE" >> $GITHUB_ENV
            echo "LIB=C:/openssl-${{ matrix.WINDOWS.WINDOWS }}-${{ matrix.PYTHON.MSVC_VERSION }}/lib;$LIB" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - uses: ./.github/actions/build-wheel
        with:
          python: python
          version: ${{ github.event.inputs.version }}
          python-version: ${{ matrix.PYTHON.ABI_VERSION }}

      - run: mkdir cryptography-wheelhouse
      - run: move wheelhouse\cryptography*.whl cryptography-wheelhouse\
      - uses: actions/upload-artifact@v2.2.0
        with:
          name: "cryptography-${{ github.event.inputs.version }}-${{ matrix.WINDOWS.WINDOWS }}-${{ matrix.PYTHON.VERSION }}-${{ matrix.PYTHON.ABI_VERSION}}"
          path: cryptography-wheelhouse\
